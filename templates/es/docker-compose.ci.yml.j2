{% from 'macros/header.j2' import header with context %}
{{ header('#') }}

version: "3.1"

services:
  test_unit:
    image: ci/$PROJECT_NAME:$BRANCH_NAME-$BUILD_NUMBER
{% if not has_entrypoint %}
    user: node
{% endif %}
    command: npm run test:unit:_run


  test_acceptance:
    build: .
    image: ci/$PROJECT_NAME:$BRANCH_NAME-$BUILD_NUMBER
    environment:
      ELASTIC_SEARCH_DSN: es:9200
      REDIS_HOST: redis
      MONGO_HOST: mongo
      POSTGRES_HOST: postgres
{% if acceptance_creds == 'aws' %}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET: ${AWS_BUCKET}
{% endif %}
      MOCHA_GREP: ${MOCHA_GREP}
{% if name == 'filestore' %}
      ENABLE_CONVERSIONS: "true"
{% endif %}
{% if name == 'clsi' %}
      TEXLIVE_IMAGE: quay.io/sharelatex/texlive-full:2017.1
      TEXLIVE_IMAGE_USER: "tex"
      DOCKER_RUNNER: "true"
      COMPILES_HOST_DIR: $PWD/compiles
      SYNCTEX_BIN_HOST_PATH: $PWD/bin/synctex
      SQLITE_PATH: /app/compiles/db.sqlite
      SHARELATEX_CONFIG: /app/config/settings.defaults.coffee
{% endif %}
    depends_on:
{% for dependency in dependencies %}
      - {{ dependency }}
{% endfor %}
{% if not has_entrypoint %}
    user: node
{% endif %}
    command: npm run test:acceptance:_run
{% if name in [
  'clsi',
] %}
    volumes:
{% endif %}
{% if name == 'clsi' %}
      - /var/run/docker.sock:/var/run/docker.sock:rw,z
      - ./compiles:/app/compiles:z
      - ./cache:/app/cache:z
      - ./bin/synctex:/app/bin/synctex:z
{% endif %}



  tar:
    build: .
    image: ci/$PROJECT_NAME:$BRANCH_NAME-$BUILD_NUMBER
    volumes:
      - ./:/tmp/build/
    command: tar -czf /tmp/build/build.tar.gz --exclude=build.tar.gz --exclude-vcs .
    user: root

{% if 'redis' in dependencies %}
  redis:
    image: redis
{% endif %}

{% if 'mongo' in dependencies %}
  mongo:
    image: mongo:3.4
{% endif %}
